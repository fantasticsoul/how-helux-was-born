import type { ICommitOpts } from './mutateDeep';
import { execDepFns } from './notify';

export function commitState(opts: ICommitOpts) {
  const { state, internal, mutateCtx } = opts;
  const { rawState, isDeep, ver, snap } = internal;

  if (isDeep) {
    internal.prevSnap = ver === 0 ? { ...snap } : snap;
    // now state is a structural shared obj generated by limu
    internal.snap = state;
    Object.assign(rawState, state);
  } else {
    internal.snap = { ...rawState };
  }

  internal.ver += 1;
  internal.sn = mutateCtx.sn;
  execDepFns(opts);
}
